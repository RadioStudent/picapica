// Generated by CoffeeScript 2.6.1
(function() {
  var SearchFilter;

  SearchFilter = function($rootScope, _) {
    var Filter, service;
    Filter = class Filter {
      constructor(text, type, label, fromAutocomplete = false) {
        this.text = text;
        this.fromAutocomplete = fromAutocomplete;
        this.types = Filter.generateFilterTypes(type);
        this.label = label || this.text;
        service.all.push(this);
        $rootScope.$broadcast('filters.update');
      }

      remove() {
        service.all = service.all.filter((filter) => {
          return !angular.equals(this, filter);
        });
        return $rootScope.$broadcast('filters.update');
      }

      getType() {
        return _.find(this.types, {
          active: true
        }).type;
      }

      static generateFilterTypes(type) {
        var allFilterTypes;
        allFilterTypes = [
          {
            name: 'Artist',
            type: 'artist.name',
            active: false,
            visible: true
          },
          {
            name: 'Artist ID',
            type: 'artist.id',
            active: false,
            visible: false
          },
          {
            name: 'Album',
            type: 'album.name',
            active: false,
            visible: true
          },
          {
            name: 'Album ID',
            type: 'album.id',
            active: false,
            visible: false
          },
          {
            name: 'Title',
            type: 'track.name',
            active: false,
            visible: true
          },
          {
            name: 'Track ID',
            type: 'track.id',
            active: false,
            visible: false
          }
        ];
        if (type) {
          _.find(allFilterTypes, {
            type: type
          }).active = true;
        }
        return allFilterTypes;
      }

      static buildParams() {
        var params;
        params = service.all.map(function(filter) {
          var filterType, i, len, obj, ref;
          obj = {};
          ref = filter.types;
          for (i = 0, len = ref.length; i < len; i++) {
            filterType = ref[i];
            if (filterType.active) {
              obj[filterType.type] = filter.text;
            }
          }
          if (angular.equals(obj, {})) {
            obj._all = filter.text;
          }
          return obj;
        });
        return JSON.stringify(params);
      }

    };
    return service = {
      all: [],
      reset: function() {
        return service.all = [];
      },
      add: function(...vars) {
        return new Filter(...vars);
      },
      buildParams: Filter.buildParams
    };
  };

  module.exports = SearchFilter;

}).call(this);
